version: '3'

# TODO: install apoc
# https://neo4j.com/developer/neo4j-apoc/
# https://neo4j.com/labs/apoc/4.1/installation/
# https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/4.1.0.9
# sudo curl https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.1.0.9/apoc-4.1.0.9-all.jar -o volumes/neo4j/plugins/apoc-4.1.0.9-all.jar
# https://github.com/neo4j-contrib/neo4j-apoc-procedures

# 4.2.0.2 Release - works with Neo4j versions 4.2.x
# https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.2.0.2/apoc-4.2.0.2-all.jar
# apoc version  neo4j version
# 4.2.0.2
# 4.2.2 (4.2.x)

# TODO:
# working urls
# http://neo4j.kuartzo.com:browser/ (ws fails)
# http://neo4j.kuartzo.com:7474/browser/

# TODO:
# caddy ws reverseproxy
# https://caddy.community/t/caddy-v2-how-to-proxy-websoket-v2ray-websocket-tls/7040/12

services:
  caddy:
    image: caddy:2.4.3
    domainname: kuartzo.com
    hostname: caddy
    container_name: caddy
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./volumes/caddy/data:/data
      - ./volumes/caddy/config:/config

  api-server:
    image: koakh/neo4j-gqllib-starter-server:latest
    domainname: kuartzo.com
    hostname: api-server
    container_name: api-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - /etc/localtime:/etc/localtime:ro
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=xpshare%28
      # https://community.neo4j.com/t/getting-neo4jerror-could-not-perform-discovery-no-routing-servers-available-while-accessing-from-nodejs/13016/4
      # I have resolved my issue by switching from neo4j:// protocol to bolt://
      - NEO4J_URL=neo4j://neo4j:7687/neo4j
      # - NEO4J_URL=neo4j://neo4j.kuartzo.com:7687/neo4j
      - NEO4J_GRAPHQL_JWT_SECRET=supersecret

  # https://neo4j.com/developer/docker-run-neo4j/
  # (Docker specific configuration settings)[https://neo4j.com/docs/operations-manual/current/docker/ref-settings/]
  neo4j:
    image: neo4j:4.2.2-enterprise
    domainname: kuartzo.com
    hostname: neo4j
    container_name: neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7473:7473"
      - "7687:7687"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./volumes/neo4j/data:/var/lib/neo4j/data
      - ./volumes/neo4j/logs:/var/lib/neo4j/logs
      - ./volumes/neo4j/plugins:/var/lib/neo4j/plugins
      - ./volumes/neo4j/import:/var/lib/neo4j/import
    environment:
      # - NEO4J_AUTH=none
      - NEO4J_AUTH=neo4j/xpshare%28
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      #  you can override every neo4j.conf property by prefix it with NEO4J_
      #  https://neo4j.com/docs/labs/neo4j-streams/current/docker/#neo4j_streams_docker
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_default__advertised__address=neo4j.kuartzo.com
      - NEO4J_dbms_connector_bolt__address=neo4j.kuartzo.com:7687
      - NEO4J_dbms_connector_bolt_advertised__address=neo4j.kuartzo.com
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_connector_bolt_advertised__address=:7687
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_browser_allow__outgoing__connections=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_export_file_enabled=true
      # - NEO4J_dbms_ssl_policy_bolt_client__auth=NONE
      # - NEO4J_dbms_ssl_policy_https_client__auth=NONE
